diff --git a/code/ScreamTx.cpp b/code/ScreamTx.cpp
index 881cd30..bc182c2 100644
--- a/code/ScreamTx.cpp
+++ b/code/ScreamTx.cpp
@@ -15,6 +15,8 @@
 #include <stdlib.h>
 #include <math.h>
 
+const char *log_tag = "scream_lib";
+
 // === Some good to have features, SCReAM works also
 //     with these disabled
 // Fast start can resume if little or no congestion detected
@@ -255,7 +257,8 @@ void ScreamTx::Statistics::getSummary(float time, char s[]) {
 	if (sumRateTx > 100000.0f) {
 		lossRateLong = sumRateLost / sumRateTx * 100.0f;
 	}
-	sprintf(s, "%5.1f  Transmit rate = %5.0fkbps, PLR = %5.2f%%(%5.2f%%), RTT = %5.3fs, Queue delay = %5.3fs",
+	sprintf(s, "%s summary %5.1f  Transmit rate = %5.0fkbps, PLR = %5.2f%%(%5.2f%%), RTT = %5.3fs, Queue delay = %5.3fs",
+        log_tag,
 		time,
 		avgRateTx / 1000.0f,
 		lossRate,
diff --git a/code/ScreamTx.h b/code/ScreamTx.h
index b651161..af0499a 100644
--- a/code/ScreamTx.h
+++ b/code/ScreamTx.h
@@ -287,7 +287,7 @@ extern "C" {
 		/*
 		* Get the list of log items
 		*/
-		char *getDetailedLogItemList() {
+		const char *getDetailedLogItemList() {
 			return "\"Time [s]\",\"Estimated queue delay [s]\",\"RTT [s]\",\"Congestion window [byte]\",\"Bytes in flight [byte]\",\"Fast increase mode\",\"Total transmit bitrate [bps]\",\"Stream ID\",\"RTP SN\",\"Bytes newly ACKed\",\"Bytes newly ACKed and CE marked\",\"Media coder bitrate [bps]\",\"Transmitted bitrate [bps]\",\"ACKed bitrate [bps]\",\"Lost bitrate [bps]\",\"CE Marked bitrate [bps]\",\"Marker bit set\"";
 		}
 
@@ -323,7 +323,7 @@ extern "C" {
 		/*
 		  * Return true if loss event has occured for the given ssrc
 		  */
-		bool ScreamTx::isLossEpoch(uint32_t ssrc);
+		bool isLossEpoch(uint32_t ssrc);
 
 	private:
 		/*
